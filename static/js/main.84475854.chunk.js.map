{"version":3,"sources":["serviceWorker.js","helper.js","components/calendar/Item.jsx","components/calendar/List.jsx","redux/_constants.js/index.js","redux/_actions/creators.js","services/_api/request.js","redux/_actions/index.js","components/Button.jsx","components/Header.jsx","components/DropDown.jsx","components/menu/Day.jsx","components/menu/Week.jsx","pages/Calendar.jsx","redux/_reducers/index.js","redux/_store/index.js","redux/_store/persist.js","index.js"],"names":["Boolean","window","location","hostname","match","days","colors","dateOptions","year","month","day","dateFormatToISO","value","toLocaleString","undefined","minimumIntegerDigits","useGrouping","dateFormat","dateInput","date","Date","getMonth","getDate","getFullYear","getDateOfWeek","type","valueOf","getSortedDataKey","data","Object","keys","sort","a","b","holidayDate","handleEventColor","color","getHolidaysData","startDate","getData","JSON","parse","stringify","i","key","getDay","id","holidays","holidayType","handleDateFormat","options","Intl","DateTimeFormat","format","CalendarItem","holidayTypes","holidayDay","holidayDayOfWeek","getEvents","map","event","index","Card","variant","className","style","textAlign","backgroundColor","name","Col","xs","sm","border","CalendarList","getCalendarList","holidayKeys","item","Row","defaultProps","connect","state","dateTypes","inputEventTypes","responseTypes","STORE_EVENTS_DATA","errorTypes","setDateSelected","setDaySelected","setStartDateOfWeek","startDateOfWeek","setEndDateOfWeek","endDateOfWeek","setDatesIsCalled","storeEventsData","dispatch","keysData","payload","storeEventsDataError","error","STORE_EVENTS_DATA_ERROR","endDate","axios","method","headers","apiKey","startDateNoFormat","response","holidaysData","holidaysDataKey","handleGetEventsRequest","getEventsRequest","setDatesByDate","getEndDay","setDatesByDay","dateObj","defaults","baseURL","ButtonComponent","updateDates","dateSelected","inputEventType","daySelected","Button","onClick","evt","preventDefault","handleSetByDateUpdate","handleSetByDayUpdate","CalendarHeader","Fragment","md","Dropdown","Divider","DropDownComponent","handleDateDisplay","DropdownButton","title","Item","e","DayMenu","DropDown","useEffect","Container","Week","rootReducer","action","assign","eventsError","storeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","serializedState","localStorage","getItem","loadFromLocalStorage","applyMiddleware","thunk","subscribe","setItem","saveToLocalStorage","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.84475854.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const getOneDay = 1000 * 3600 * 24;\r\nexport const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\nexport const colors = [\"#ce3141\", \"#ce318f\", \"#ce7031\", \"#8fce31\"];\r\nexport const dateOptions = {\r\n  year: \"numeric\",\r\n  month: \"short\",\r\n  day: \"2-digit\"\r\n};\r\n\r\nexport function dateFormatToISO(value) {\r\n  return value.toLocaleString(undefined, {\r\n    minimumIntegerDigits: 2,\r\n    useGrouping: false\r\n  });\r\n}\r\nexport function dateFormat(dateInput) {\r\n  const date = new Date(dateInput);\r\n  const getMonth = dateFormatToISO(date.getMonth() + 1);\r\n  const getDate = dateFormatToISO(date.getDate());\r\n  return date.getFullYear() + \"-\" + getMonth + \"-\" + getDate;\r\n}\r\nexport function getDateOfWeek(dateInput, type, day) {\r\n  const date = new Date(dateInput);\r\n  return type === \"start\"\r\n    ? new Date(date.valueOf() - getOneDay * day)\r\n    : new Date(date.valueOf() + getOneDay * day);\r\n}\r\n\r\nexport function getSortedDataKey(data) {\r\n  return Object.keys(data || []).sort(function (a, b) {\r\n    return data[a].holidayDate[\"id\"] - data[b].holidayDate[\"id\"];\r\n  });\r\n}\r\nexport function handleEventColor(type) {\r\n  let color;\r\n  switch (type) {\r\n    case \"folk\":\r\n      color = colors[0];\r\n      break;\r\n    case \"public\":\r\n      color = colors[1];\r\n      break;\r\n    default:\r\n      color = colors[2];\r\n  }\r\n  return color;\r\n}\r\n\r\nexport function getHolidaysData(startDate, data) {\r\n  const getData = JSON.parse(JSON.stringify(data));\r\n  let i = 0;\r\n  while (i <= 6) {\r\n    const date = getDateOfWeek(startDate, \"dateRange\", i);\r\n    const key = dateFormat(date);\r\n    const holidayDate = { day: days[date.getDay()], date, id: i };\r\n    getData.holidays[key] = getData.holidays[key]\r\n      ? { holidayDate, holidayType: getData.holidays[key] }\r\n      : { holidayDate, holidayType: null };\r\n    i++;\r\n  }\r\n  return getData.holidays;\r\n}\r\n\r\nexport function handleDateFormat(dateInput, options) {\r\n  return new Intl.DateTimeFormat(undefined, options).format(\r\n    new Date(dateInput.date || dateInput)\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { days, handleEventColor } from \"../../helper\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CalendarItem({ holidayDate, holidayTypes }) {\r\n  const holidayDay = holidayDate ? new Date(holidayDate.date).getDate() : null;\r\n  const holidayDayOfWeek = holidayDate\r\n    ? new Date(holidayDate.date).getDay()\r\n    : null;\r\n  const getEvents = (holidayTypes || []).map((event, index) => {\r\n    return (\r\n      <Card\r\n        key={index}\r\n        variant=\"primary\"\r\n        className=\"py-2 my-2\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          backgroundColor: handleEventColor(event.type),\r\n          color: \"#fdf4f0\"\r\n        }}\r\n      >\r\n        {event.name}\r\n      </Card>\r\n    );\r\n  });\r\n  return holidayDate ? (\r\n    <Col\r\n      xs={12}\r\n      sm\r\n      className=\"px-0\"\r\n      style={{\r\n        border: \"0.1px solid #318FCE\"\r\n      }}\r\n    >\r\n      <Card className=\"w-100 px-0 h-100 d-inline-block\">\r\n        <div>\r\n          <p\r\n            style={{\r\n              textAlign: \"center\",\r\n              backgroundColor: \"#318FCE\",\r\n              color: \"#eff6fb\"\r\n            }}\r\n          >\r\n            <strong>{days[holidayDayOfWeek]}</strong> <br />\r\n            <span>{holidayDay}</span>\r\n          </p>\r\n        </div>\r\n        <div className=\"w-100 h-75 d-inline-block py-3 px-1\">\r\n          {holidayTypes ? getEvents : null}\r\n        </div>\r\n      </Card>\r\n    </Col>\r\n  ) : null;\r\n}\r\n\r\nCalendarItem.propTypes = {\r\n  holidayDate: PropTypes.object,\r\n  holidayTypes: PropTypes.array\r\n};\r\nexport default CalendarItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport CalendarItem from \"./Item\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nfunction CalendarList({ holidays, holidayKeys }) {\r\n  const getCalendarList = (holidayKeys || []).map(item => {\r\n    const holidayDate = holidays[item].holidayDate;\r\n    const holidayTypes = holidays[item].holidayType;\r\n    return (\r\n      <CalendarItem\r\n        key={item}\r\n        holidayTypes={holidayTypes}\r\n        holidayDate={holidayDate}\r\n      />\r\n    );\r\n  });\r\n  return <Row className=\"mx-2 mx-md-0 \">{getCalendarList}</Row>;\r\n}\r\n\r\nCalendarList.propTypes = {\r\n  holidays: PropTypes.object,\r\n  holidayKeys: PropTypes.array\r\n};\r\n\r\nCalendarList.defaultProps = {\r\n  holidays: {},\r\n  holidayKeys: []\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    holidays: state.holidays,\r\n    holidayKeys: state.holidayKeys\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(CalendarList);\r\n","export const dateTypes = {\r\n  SET_DATE_SELECTED: \"SET_DATE_SELECTED\",\r\n  SET_DAY_SELECTED: \"SET_DAY_SELECTED\",\r\n  SET_START_DATE_OF_WEEK: \"SET_START_DATE_OF_WEEK\",\r\n  SET_END_DATE_OF_WEEK: \"SET_END_DATE_OF_WEEK\"\r\n};\r\n\r\nexport const inputEventTypes = {\r\n  SET_DATES_IS_CALLED: \"SET_DATES_IS_CALLED\"\r\n};\r\n\r\nexport const responseTypes = {\r\n  STORE_EVENTS_DATA: \"STORE_EVENTS_DATA\"\r\n};\r\n\r\nexport const errorTypes = {\r\n  STORE_EVENTS_DATA_ERROR: \"STORE_EVENTS_DATA_ERROR\"\r\n};\r\n","import {\r\n  dateTypes,\r\n  inputEventTypes,\r\n  responseTypes\r\n} from \"../_constants.js/index.js\";\r\n\r\nexport function setDateSelected(dateInput) {\r\n  return { type: dateTypes.SET_DATE_SELECTED, date: dateInput };\r\n}\r\n\r\nexport function setDaySelected(dateInput) {\r\n  return { type: dateTypes.SET_DAY_SELECTED, date: dateInput };\r\n}\r\nexport function setStartDateOfWeek(startDateOfWeek) {\r\n  return { type: dateTypes.SET_START_DATE_OF_WEEK, date: startDateOfWeek };\r\n}\r\n\r\nexport function setEndDateOfWeek(endDateOfWeek) {\r\n  return { type: dateTypes.SET_END_DATE_OF_WEEK, date: endDateOfWeek };\r\n}\r\n\r\nexport function setDatesIsCalled(type) {\r\n  return { type: inputEventTypes.SET_DATES_IS_CALLED, name: type };\r\n}\r\n\r\nexport function storeEventsData(data, dispatch, keysData) {\r\n  dispatch({\r\n    type: responseTypes.STORE_EVENTS_DATA,\r\n    payload: data,\r\n    keys: keysData\r\n  });\r\n}\r\n\r\nexport function storeEventsDataError(error, dispatch) {\r\n  dispatch({ type: responseTypes.STORE_EVENTS_DATA_ERROR, payload: error });\r\n}\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL =\r\n  \"https://wozmx9dh26.execute-api.eu-west-1.amazonaws.com/api/holidays\";\r\n\r\nexport function getEvents(startDate, endDate) {\r\n  return axios({\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    data: {\r\n      apiKey: \"7ccf26818346aa6f97f2e9bf0b5f4cdd\",\r\n      startDate: startDate,\r\n      endDate: endDate\r\n    }\r\n  });\r\n}\r\n","import {\r\n  setDateSelected,\r\n  setDaySelected,\r\n  setStartDateOfWeek,\r\n  setEndDateOfWeek,\r\n  setDatesIsCalled,\r\n  storeEventsData,\r\n  storeEventsDataError\r\n} from \"./creators\";\r\nimport {\r\n  getDateOfWeek,\r\n  dateFormat,\r\n  getHolidaysData,\r\n  days,\r\n  getSortedDataKey\r\n} from \"../../helper\";\r\nimport { getEvents } from \"../../services/_api/request.js\";\r\n\r\nasync function getEventsRequest(\r\n  startDate,\r\n  endDate,\r\n  startDateNoFormat,\r\n  dispatch\r\n) {\r\n  try {\r\n    const response = await getEvents(startDate, endDate);\r\n    if (response && response.data && response.data.error === false) {\r\n      const holidaysData = getHolidaysData(startDateNoFormat, response.data);\r\n      const holidaysDataKey = getSortedDataKey(holidaysData);\r\n      return storeEventsData(holidaysData, dispatch, holidaysDataKey);\r\n    }\r\n  } catch (error) {\r\n    return storeEventsDataError(error, dispatch);\r\n  }\r\n}\r\n\r\nfunction handleGetEventsRequest(startDateOfWeek, endDateOfWeek) {\r\n  const startDate = dateFormat(startDateOfWeek);\r\n  const endDate = dateFormat(endDateOfWeek);\r\n  return function (dispatch) {\r\n    getEventsRequest(startDate, endDate, startDateOfWeek, dispatch);\r\n  };\r\n}\r\n\r\nexport function setDatesByDate(dateInput) {\r\n  const startDateOfWeek = getDateOfWeek(dateInput, \"start\", dateInput.getDay());\r\n  const getEndDay = 6 - dateInput.getDay();\r\n  const endDateOfWeek = getDateOfWeek(dateInput, \"end\", getEndDay);\r\n  return function (dispatch) {\r\n    dispatch(setDatesIsCalled(\"setDatesByDate\"));\r\n    dispatch(\r\n      setDaySelected({ day: days[dateInput.getDay()], date: dateInput })\r\n    );\r\n    dispatch(setDateSelected(dateInput));\r\n    dispatch(setStartDateOfWeek(startDateOfWeek));\r\n    dispatch(setEndDateOfWeek(endDateOfWeek));\r\n    dispatch(handleGetEventsRequest(startDateOfWeek, endDateOfWeek));\r\n  };\r\n}\r\n\r\nexport function setDatesByDay(dateObj) {\r\n  const dateInput = dateObj.date;\r\n  const endDateOfWeek = getDateOfWeek(dateInput, \"end\", 6);\r\n  return function (dispatch) {\r\n    dispatch(setDaySelected(dateObj));\r\n    dispatch(setDatesIsCalled(\"setDatesByDay\"));\r\n    dispatch(setDateSelected(null));\r\n    dispatch(setStartDateOfWeek(dateInput));\r\n    dispatch(setEndDateOfWeek(endDateOfWeek));\r\n    dispatch(handleGetEventsRequest(dateInput, endDateOfWeek));\r\n  };\r\n}\r\n\r\nfunction handleSetByDateUpdate(type, dateInput, dispatch) {\r\n  let getFirstDate;\r\n  if (type === \"Today\") {\r\n    getFirstDate = dateInput;\r\n  } else {\r\n    getFirstDate =\r\n      type === \"Previous\"\r\n        ? getDateOfWeek(dateInput, \"start\", 7)\r\n        : getDateOfWeek(dateInput, \"end\", 7);\r\n  }\r\n  return dispatch(setDatesByDate(getFirstDate));\r\n}\r\n\r\nfunction handleSetByDayUpdate(type, dateInput, dispatch) {\r\n  const dateObj = JSON.parse(JSON.stringify(dateInput));\r\n  dateObj[\"day\"] = days[new Date(dateObj[\"date\"]).getDay()];\r\n  if (type === \"Previous\") {\r\n    dateObj[\"date\"] = getDateOfWeek(dateInput.date, \"start\", 6);\r\n  } else {\r\n    dateObj[\"date\"] = getDateOfWeek(dateInput.date, \"end\", 6);\r\n  }\r\n  return dispatch(setDatesByDay(dateObj));\r\n}\r\n\r\nexport function updateDates(dateInput, type, inputEventType) {\r\n  return function (dispatch) {\r\n    if (inputEventType === \"setDatesByDate\") {\r\n      return handleSetByDateUpdate(type, dateInput, dispatch);\r\n    }\r\n    type === \"Today\"\r\n      ? dispatch(setDatesByDate(dateInput))\r\n      : handleSetByDayUpdate(type, dateInput, dispatch);\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateDates } from \"../redux/_actions\";\r\nimport { AiOutlineDoubleLeft, AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ButtonComponent({\r\n  name,\r\n  updateDates,\r\n  dateSelected,\r\n  inputEventType,\r\n  daySelected\r\n}) {\r\n  return (\r\n    <Button\r\n      variant=\"outline-primary\"\r\n      onClick={evt => {\r\n        evt.preventDefault();\r\n        inputEventType === \"setDatesByDate\" || name === \"Today\"\r\n          ? updateDates(\r\n              name === \"Today\" ? new Date() : dateSelected,\r\n              name,\r\n              inputEventType\r\n            )\r\n          : updateDates(daySelected, name, inputEventType);\r\n      }}\r\n    >\r\n      {name === \"Previous\" ? (\r\n        <span>\r\n          {\" \"}\r\n          <AiOutlineDoubleLeft /> {name}\r\n        </span>\r\n      ) : name === \"Today\" ? (\r\n        name\r\n      ) : (\r\n        <span>\r\n          {name} <AiOutlineDoubleRight />\r\n        </span>\r\n      )}\r\n    </Button>\r\n  );\r\n}\r\n\r\nButtonComponent.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  updateDates: PropTypes.func.isRequired,\r\n  dateSelected: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  daySelected: PropTypes.object,\r\n  inputEventType: PropTypes.string\r\n};\r\n\r\nButtonComponent.defaultProps = {\r\n  inputEventType: null,\r\n  daySelected: {},\r\n  dateSelected: {}\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    dateSelected: state.dateSelected,\r\n    inputEventType: state.inputEventType,\r\n    daySelected: state.daySelected,\r\n    startDateOfWeek: state.startDateOfWeek,\r\n    endDateOfWeek: state.endDateOfWeek\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateDates })(ButtonComponent);\r\n","import React from \"react\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport ButtonComponent from \"./Button\";\r\n\r\nfunction CalendarHeader() {\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"pt-4\">\r\n        <Col xs={7} md={10}>\r\n          <h5 className=\"className='pt-4'\"> Events Calendar </h5>\r\n        </Col>\r\n\r\n        <Col xs={5} md={2} style={{ textAlign: \"right\" }}>\r\n          <ButtonComponent name=\"Today\" />\r\n        </Col>\r\n      </Row>\r\n      <div>\r\n        <Dropdown.Divider />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CalendarHeader;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setDatesByDay } from \"../redux/_actions/\";\r\nimport { handleDateFormat } from \"../helper\";\r\n\r\nfunction DropDownComponent({\r\n  holidays,\r\n  daySelected,\r\n  setDatesByDay,\r\n  holidayKeys\r\n}) {\r\n  function handleDateDisplay(dateInput) {\r\n    return (\r\n      dateInput.day +\r\n      \" - \" +\r\n      handleDateFormat(dateInput, {\r\n        month: \"short\",\r\n        day: \"numeric\"\r\n      })\r\n    );\r\n  }\r\n  return (\r\n    <DropdownButton\r\n      id=\"dropdown-basic-button\"\r\n      variant=\"outline-primary\"\r\n      title={handleDateDisplay(daySelected)}\r\n    >\r\n      {(holidayKeys || []).map(item => {\r\n        const holidayDate = holidays[item].holidayDate;\r\n        return (\r\n          <Dropdown.Item\r\n            key={item}\r\n            style={{ color: \"#318FCE\" }}\r\n            onClick={e => {\r\n              e.preventDefault();\r\n              setDatesByDay(holidayDate);\r\n            }}\r\n          >\r\n            {holidayDate\r\n              ? holidayDate.day && holidayDate.day !== daySelected.day\r\n                ? handleDateDisplay(holidayDate)\r\n                : null\r\n              : null}\r\n          </Dropdown.Item>\r\n        );\r\n      })}\r\n    </DropdownButton>\r\n  );\r\n}\r\n\r\nDropDownComponent.propTypes = {\r\n  daySelected: PropTypes.object,\r\n  holidays: PropTypes.object,\r\n  holidayKeys: PropTypes.array,\r\n  setDatesByDay: PropTypes.func\r\n};\r\n\r\nDropDownComponent.defaultProps = {\r\n  daySelected: { day: \"Mon\", date: new Date() },\r\n  holidays: {},\r\n  holidayKeys: [],\r\n  setDatesByDay: () => {}\r\n};\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    holidays: state.holidays,\r\n    holidayKeys: state.holidayKeys,\r\n    daySelected: state.daySelected\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { setDatesByDay })(DropDownComponent);\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport DropDown from \"../DropDown\";\r\n\r\nexport default function DayMenu() {\r\n  return (\r\n    <Col xs={6} sm={3} md={6}>\r\n      <Row>\r\n        <strong>\r\n          <p className=\"mr-2 my-2\"> First Day:</p>\r\n        </strong>\r\n        <span>\r\n          <DropDown />\r\n        </span>\r\n      </Row>\r\n    </Col>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport Button from \"../Button\";\r\nimport { handleDateFormat, dateOptions } from \"../../helper\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction handleDateDisplay(data) {\r\n  return data ? handleDateFormat(data, dateOptions) : data;\r\n}\r\nfunction WeekMenu({ startDateOfWeek, endDateOfWeek }) {\r\n  return (\r\n    <Col xs={6} sm={9} md={6}>\r\n      <Row className=\"justify-content-end\">\r\n        <Button name=\"Previous\" />\r\n        <strong className=\"mx-3 my-2\">\r\n          {\" \"}\r\n          <span>\r\n            {handleDateDisplay(startDateOfWeek) +\r\n              \" to \" +\r\n              handleDateDisplay(endDateOfWeek)}\r\n          </span>\r\n        </strong>\r\n        <Button name=\"Next\" />\r\n      </Row>\r\n    </Col>\r\n  );\r\n}\r\n\r\nWeekMenu.propTypes = {\r\n  startDateOfWeek: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.instanceOf(Date)\r\n  ]),\r\n  endDateOfWeek: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.instanceOf(Date)\r\n  ])\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    startDateOfWeek: state.startDateOfWeek,\r\n    endDateOfWeek: state.endDateOfWeek\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(WeekMenu);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport CalendarList from \"../components/calendar/List\";\r\nimport CalendarHeader from \"../components/Header\";\r\nimport DayMenu from \"../components/menu/Day\";\r\nimport WeekMenu from \"../components/menu/Week\";\r\n\r\nimport { setDatesByDate } from \"../redux/_actions\";\r\n\r\nfunction Calendar({ setDatesByDate, dateSelected, inputEventType }) {\r\n  useEffect(() => {\r\n    if (!dateSelected && inputEventType !== \"setDatesByDay\") {\r\n      setDatesByDate(new Date());\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <div className=\"calendar-page\">\r\n      <Container>\r\n        <CalendarHeader />\r\n        <Row className=\"px-3 my-4\">\r\n          <DayMenu />\r\n          <WeekMenu />\r\n        </Row>\r\n        <CalendarList />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    dateSelected: state.dateSelected,\r\n    inputEventType: state.inputEventType\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { setDatesByDate })(Calendar);\r\n","import {\r\n  dateTypes,\r\n  inputEventTypes,\r\n  responseTypes,\r\n  errorTypes\r\n} from \"../_constants.js\";\r\n\r\nfunction rootReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case dateTypes.SET_DATE_SELECTED:\r\n      return Object.assign({}, state, {\r\n        dateSelected: action.date\r\n      });\r\n    case dateTypes.SET_DAY_SELECTED:\r\n      return Object.assign({}, state, {\r\n        daySelected: action.date\r\n      });\r\n    case dateTypes.SET_START_DATE_OF_WEEK:\r\n      return Object.assign({}, state, {\r\n        startDateOfWeek: action.date\r\n      });\r\n    case dateTypes.SET_END_DATE_OF_WEEK:\r\n      return Object.assign({}, state, {\r\n        endDateOfWeek: action.date\r\n      });\r\n    case inputEventTypes.SET_DATES_IS_CALLED:\r\n      return Object.assign({}, state, {\r\n        inputEventType: action.name\r\n      });\r\n    case responseTypes.STORE_EVENTS_DATA:\r\n      return Object.assign({}, state, {\r\n        holidays: action.payload,\r\n        holidayKeys: action.keys\r\n      });\r\n    case errorTypes.STORE_EVENTS_DATA_ERROR:\r\n      return Object.assign({}, state, {\r\n        eventsError: action.payload\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"../_reducers/index\";\r\n\r\nimport { saveToLocalStorage, loadFromLocalStorage } from \"./persist\";\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  loadFromLocalStorage(),\r\n\r\n  storeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;\r\n","export function saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    return {};\r\n  }\r\n}\r\n\r\nexport function loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n\r\n    if (serializedState === null) return undefined;\r\n\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return {};\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport CalendarPage from \"./pages/Calendar\";\r\nimport store from \"./redux/_store\";\r\n\r\nimport \"./index.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <CalendarPage />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}